#!/usr/bin/python
# $Id$

# ESXi 4.x-6.x has no 'cat -v' functionality.
# This will not work as-is in 4.x because it uses constructs not available
# in python 2.5 (no 'as' keyword, no __future__ print_function, etc).

from __future__ import print_function

import sys
import os
import re

def dispchar( c ):
    if bytes is not str and isinstance( c, bytes ):
        conv = lambda x: bytes( x, encoding='ascii' )
    else:
        conv = lambda x: x
    n = ord( c )
    if n < 31:
        return conv( '^' + chr( n + 64 ) )
    if n == 0x7f:
        return conv( '^?' )
    if n > 127:
        return conv( '\\{:x}'.format( n ) )
    else:
        return c

pat = re.compile( b'([\x00-\x08\x0b-\x1f\x7f-\xff])' )
def catv( fd ):
    stdout = sys.stdout.fileno()
    while True:
        buf = os.read( fd, 4096 )
        if len( buf ) == 0:
            return
        buf = pat.sub( lambda c: dispchar( c.group( 1 )), buf )
        os.write( stdout, buf )

if __name__ == '__main__':
    if len( sys.argv ) < 2:
        sys.argv.insert( 1, '-' )
    for filename in sys.argv[ 1: ]:
        if filename == '-':
            fd = os.dup( sys.stdin.fileno() )
        else:
            try:
                fd = os.open( filename, os.O_RDONLY )
            except IOError as e:
                print( e.filename, e.strerror, sep=': ', file=sys.stderr )
                continue
        catv( fd )
        os.close( fd )

# eof
